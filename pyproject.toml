[tool.poetry]
name = "drf-permission-rules"
version = "0.4.5"
description = "Declarative access policies/permissions modeled after AWS' IAM policies."
authors = ["Pavel Maltsev <pavel@speechki.org>", "Bulat Kurbanov <kurbanovbul@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/speechki-book/drf-permission-rules"
license = "MIT"
keywords=["django", "restframework", "policy", "authorization", "declaritive"]
packages = [{include = "permission_rules"}]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
exclude = ["tests*"]

[tool.poetry.dependencies]
python = "^3.9"
django = "*"
djangorestframework = "*"
drf-access-policy = "*"
redis = "*"
django-model-utils = "*"
django-json-widget = "*"
drf-yasg = {version = "*", extras = ["validation"]}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | app/protobuf
  | setup.py
)/
'''

[tool.flake8]
ignore = [
    # Too many leading '#' for block comment ( https://www.flake8rules.com/rules/E266.html )
    "E266",
    # Whitespace before ':' ( https://www.flake8rules.com/rules/E203.html )
    "E203",
    # Line break occurred before a binary operator ( https://www.flake8rules.com/rules/W503.html )
    "W503",
]
max-line-length = 119
max-complexity = 15
select = "B,C,E,F,W,T4,B9"
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__",
    # The old directory contains Flake8 2.0
    "old",
    # This contains our built documentation
    "build",
    # This contains builds of flake8 that we don't want to check
    "dist",
    # django migrations
    "migrations",
    "setup.py"
]
# Module imported but unused ( https://www.flake8rules.com/rules/F401.html )
per-file-ignores = [
  "__init__.py:F401",
  "apps.py:F401"
]

[tool.isort]
profile = "black"
line_length = 119
only_sections = true
force_sort_within_sections = true
lines_after_imports = 2
lexicographical = true
sections = ["FUTURE", "STDLIB", "BASEFRAMEWORK", "FRAMEWORKEXT", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_baseframework = ["django"]
known_frameworkext = ["rest_framework"]
src_paths = ["permission_rules"]
skip_glob = ["setup.py"]
